{
	"info": {
		"_postman_id": "8242d0c0-9664-4521-b101-762adf331bf0",
		"name": "get-categories-for-class",
		"description": "Test suite for getCategoriesForClass API covering various filter, sort, pagination, and error scenarios",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "36990357"
	},
	"item": [
		{
			"name": "Happy Path Tests",
			"item": [
				{
					"name": "Valid Basic Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Basic Valid Request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response structure is valid\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.have.property('imsx_codeMajor').equal('success');",
									"    pm.expect(responseData).to.have.property('imsx_severity').equal('status');",
									"    pm.expect(responseData).to.have.property('categories').that.is.an('array');",
									"    ",
									"    if(responseData.categories.length > 0) {",
									"        const firstResult = responseData.categories[0];",
									"        ",
									"        pm.expect(firstResult).to.have.property('sourcedId').that.is.a('string');",
									"        pm.expect(firstResult).to.have.property('status').that.is.a('string');",
									"        ",
									"        pm.expect(firstResult).to.have.property('weight');",
									"        pm.expect(firstResult).to.have.property('title').that.is.a('string');",
									"        ",
									"        pm.expect(firstResult.status).to.be.oneOf(['ACTIVE', 'INACTIVE', 'DELETED']);",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories"
					},
					"response": []
				},
				{
					"name": "Basic Pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Basic Pagination - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pagination parameters are respected\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.categories.length).to.be.at.most(",
									"        Number(pm.request.url.query.get('limit'))",
									"    );",
									"    ",
									"    if (pm.response.headers.has('X-Total-Count')) {",
									"        pm.expect(pm.response.headers.get('X-Total-Count')).to.be.a('string');",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?limit=10&offset=0",
							"host": [
								"{{baseUrl}}{{gradebookServiceApiPrefix}}"
							],
							"path": [
								"classes",
								"{{validClassSourcedId}}",
								"categories"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sort and Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sort and Order - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Results are properly sorted\", function () {",
									"    const responseData = pm.response.json();",
									"    const results = responseData.categories;",
									"    ",
									"    if (results.length > 1) {",
									"        const orderBy = pm.request.url.query.get('orderBy') || 'ASC';",
									"        const sortField = pm.request.url.query.get('sort') || 'dateLastModified';",
									"        ",
									"        const isSorted = results.every((result, index) => {",
									"            if (index === 0) return true;",
									"            const prev = results[index - 1][sortField];",
									"            const curr = result[sortField];",
									"            return orderBy === 'ASC' ? prev <= curr : prev >= curr;",
									"        });",
									"        ",
									"        pm.expect(isSorted).to.be.true;",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?sort=weight&orderBy=ASC",
							"host": [
								"{{baseUrl}}{{gradebookServiceApiPrefix}}"
							],
							"path": [
								"classes",
								"{{validClassSourcedId}}",
								"categories"
							],
							"query": [
								{
									"key": "sort",
									"value": "weight"
								},
								{
									"key": "orderBy",
									"value": "ASC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Field Selection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Field Selection - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only requested fields are returned\", function () {",
									"    const responseData = pm.response.json();",
									"    const fields = (pm.request.url.query.get('fields') || '')",
									"        .split(',')",
									"        .filter(Boolean);",
									"    ",
									"    if (fields.length > 0 && responseData.categories.length > 0) {",
									"        const firstResult = responseData.categories[0];",
									"        const returnedFields = Object.keys(firstResult);",
									"        ",
									"        fields.forEach(field => {",
									"            pm.expect(returnedFields).to.include(field);",
									"        });",
									"        ",
									"        returnedFields.forEach(field => {",
									"            pm.expect(fields).to.include(field);",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?fields=sourcedId,weight",
							"host": [
								"{{baseUrl}}{{gradebookServiceApiPrefix}}"
							],
							"path": [
								"classes",
								"{{validClassSourcedId}}",
								"categories"
							],
							"query": [
								{
									"key": "fields",
									"value": "sourcedId,weight"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Filter - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Filter is correctly applied\", function () {",
									"    const responseData = pm.response.json();",
									"    const filter = pm.request.url.query.get('filter');",
									"    ",
									"    if (filter && filter.includes(\"status='ACTIVE'\")) {",
									"        const allActive = responseData.categories.every(result => ",
									"            result.status === 'ACTIVE'",
									"        );",
									"        pm.expect(allActive).to.be.true;",
									"    }",
									"    ",
									"    pm.expect(responseData.categories).to.be.an('array');",
									"    if (responseData.categories.length > 0) {",
									"        console.log(\"Sample filtered results:\", ",
									"            responseData.categories.slice(0, 2));",
									"}",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?filter=status='ACTIVE'",
							"host": [
								"{{baseUrl}}{{gradebookServiceApiPrefix}}"
							],
							"path": [
								"classes",
								"{{validClassSourcedId}}",
								"categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "status='ACTIVE'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty Result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Empty Results - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Empty results handled correctly\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.have.property('imsx_codeMajor')",
									"        .equal('success');",
									"    pm.expect(responseData).to.have.property('categories')",
									"        .that.is.an('array').that.is.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "{{x-client-id}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{x-app-key}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer-token}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{classSourcedIdWithEmptyCategories}}/categories"
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Tests",
			"item": []
		},
		{
			"name": "Non-existent Class",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Non-existent Class - Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Non-existent Class - Error response structure is valid\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('imsx_codeMajor').equal('failure');",
							"    pm.expect(responseData).to.have.property('imsx_severity').equal('error');",
							"    pm.expect(responseData).to.have.property('imsx_description').that.includes('No class found with sourced id');",
							"    ",
							"    pm.expect(responseData).to.have.property('imsx_CodeMinor');",
							"    pm.expect(responseData.imsx_CodeMinor).to.have.property('imsx_codeMinorField').that.is.an('array');",
							"    pm.expect(responseData.imsx_CodeMinor.imsx_codeMinorField[0]).to.have.property('imsx_codeMinorFieldName').equal('TargetEndSystem');",
							"    pm.expect(responseData.imsx_CodeMinor.imsx_codeMinorField[0]).to.have.property('imsx_codeMinorFieldValue').equal('unknownobject');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-id",
						"value": "{{x-client-id}}",
						"type": "text"
					},
					{
						"key": "x-app-key",
						"value": "{{x-app-key}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{bearer-token}}",
						"type": "text"
					}
				],
				"url": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{invalidClassSourcedId}}/categories"
			},
			"response": []
		},
		{
			"name": "Invalid Class ID Format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid Class ID Format - Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error response structure is correct\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('imsx_codeMajor').equal('failure');",
							"    pm.expect(responseData).to.have.property('imsx_severity').equal('error');",
							"    pm.expect(responseData).to.have.property('imsx_description')",
							"    .equal('classSourcedId Id must be of type UUID');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-id",
						"value": "{{x-client-id}}",
						"type": "text"
					},
					{
						"key": "x-app-key",
						"value": "{{x-app-key}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{bearer-token}}",
						"type": "text"
					}
				],
				"url": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/invalid-uuid-format/categories"
			},
			"response": []
		},
		{
			"name": "Edge Cases",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edge Cases - Invalid pagination values\", function () {",
							"    const limit = Number(pm.request.url.query.get('limit'));",
							"    const offset = Number(pm.request.url.query.get('offset'));",
							"    ",
							"    if (limit <= 0 || offset < 0) {",
							"        pm.expect(pm.response.code).to.equal(400);",
							"        const responseData = pm.response.json();",
							"        pm.expect(responseData.imsx_description)",
							"            .to.include('Limit and offset must be provided together');",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-id",
						"value": "{{x-client-id}}",
						"type": "text"
					},
					{
						"key": "x-app-key",
						"value": "{{x-app-key}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{bearer-token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?limit=0",
					"host": [
						"{{baseUrl}}{{gradebookServiceApiPrefix}}"
					],
					"path": [
						"classes",
						"{{validClassSourcedId}}",
						"categories"
					],
					"query": [
						{
							"key": "limit",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Sort Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid Sort Field - Status code is 400\", function () {",
							"    const sortField = pm.request.url.query.get('sort');",
							"    const validFields = ['dateLastModified', 'score', 'status']; ",
							"    if (!validFields.includes(sortField)) {",
							"        pm.expect(pm.response.code).to.equal(400);",
							"        const responseData = pm.response.json();",
							"        pm.expect(responseData.imsx_description)",
							"            .to.include('Invalid sort field');",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-id",
						"value": "{{x-client-id}}",
						"type": "text"
					},
					{
						"key": "x-app-key",
						"value": "{{x-app-key}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{bearer-token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}{{gradebookServiceApiPrefix}}/classes/{{validClassSourcedId}}/categories?sort=invalidField",
					"host": [
						"{{baseUrl}}{{gradebookServiceApiPrefix}}"
					],
					"path": [
						"classes",
						"{{validClassSourcedId}}",
						"categories"
					],
					"query": [
						{
							"key": "sort",
							"value": "invalidField"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "validClassSourcedId",
			"value": "<valid-class-sourced-id>",
			"type": "string"
		},
		{
			"key": "invalidClassSourcedId",
			"value": "<invalid-class-sourced-id>",
			"type": "string"
		},
		{
			"key": "classSourcedIdWithEmptyCategories",
			"value": "<class-sourced-id-with-empty-results>",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "{{baseUrl}}",
			"type": "string"
		},
		{
			"key": "x-client-id",
			"value": "{{x-client-id}}",
			"type": "string"
		},
		{
			"key": "gradebookServiceApiPrefix",
			"value": "/ims/oneroster/gradebook/v1p2",
			"type": "string"
		},
		{
			"key": "x-app-key",
			"value": "{{x-app-key}}",
			"type": "string"
		},
		{
			"key": "bearerToken",
			"value": "{{bearer-token}}",
			"type": "string"
		}
	]
}